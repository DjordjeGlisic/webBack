// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

#nullable disable

namespace New_folder.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20241204000550_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KorisnikTura", b =>
                {
                    b.Property<int>("RezervacijeId")
                        .HasColumnType("int");

                    b.Property<int>("RezervisaniId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijeId", "RezervisaniId");

                    b.HasIndex("RezervisaniId");

                    b.ToTable("KorisnikTura");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("BrojLicneKarte")
                        .HasColumnType("bigint");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Korisnik");
                });

            modelBuilder.Entity("Models.Tura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<int>("PresotaloMesta")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Tura");
                });

            modelBuilder.Entity("Models.Znamenitost", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cena")
                        .HasColumnType("real");

                    b.Property<string>("ImeZnamenitosti")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Znamenitost");
                });

            modelBuilder.Entity("TuraZnamenitost", b =>
                {
                    b.Property<int>("PripadaTuramaId")
                        .HasColumnType("int");

                    b.Property<int>("ZnamenitostiId")
                        .HasColumnType("int");

                    b.HasKey("PripadaTuramaId", "ZnamenitostiId");

                    b.HasIndex("ZnamenitostiId");

                    b.ToTable("TuraZnamenitost");
                });

            modelBuilder.Entity("KorisnikTura", b =>
                {
                    b.HasOne("Models.Tura", null)
                        .WithMany()
                        .HasForeignKey("RezervacijeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Korisnik", null)
                        .WithMany()
                        .HasForeignKey("RezervisaniId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuraZnamenitost", b =>
                {
                    b.HasOne("Models.Tura", null)
                        .WithMany()
                        .HasForeignKey("PripadaTuramaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Znamenitost", null)
                        .WithMany()
                        .HasForeignKey("ZnamenitostiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
